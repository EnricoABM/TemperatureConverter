package view;

import javax.swing.JOptionPane;

public class ConverterGUI extends javax.swing.JFrame {

    /**
     * Creates new form ConverterGUI
     */
    public ConverterGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tempTxt = new javax.swing.JTextField();
        resultLbl = new javax.swing.JLabel();
        converterBtn = new javax.swing.JButton();
        temp2CB = new javax.swing.JComboBox<>();
        temp1CB = new javax.swing.JComboBox<>();
        celsiusLbl = new javax.swing.JLabel();
        equationLbl = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        aboutMenu = new javax.swing.JMenu();
        projectMenu = new javax.swing.JMenuItem();
        temperatureMenu = new javax.swing.JMenu();
        celsiusMenu = new javax.swing.JMenuItem();
        farenheitMenu = new javax.swing.JMenuItem();
        kelvinMenu = new javax.swing.JMenuItem();
        rankineMenu = new javax.swing.JMenuItem();
        reaumurMenu = new javax.swing.JMenuItem();
        configMenu = new javax.swing.JMenu();
        themeMenu = new javax.swing.JMenu();
        darkMenu = new javax.swing.JMenuItem();
        lightMenu = new javax.swing.JMenuItem();
        languageMenu = new javax.swing.JMenu();
        englishMenu = new javax.swing.JMenuItem();
        portugueseMenu = new javax.swing.JMenuItem();
        spanishMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperature Converter");

        tempTxt.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        tempTxt.setForeground(java.awt.Color.gray);
        tempTxt.setText("Enter a temperature");
        tempTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tempTxt.setPreferredSize(new java.awt.Dimension(111, 28));
        tempTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tempTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tempTxtFocusLost(evt);
            }
        });
        tempTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempTxtActionPerformed(evt);
            }
        });

        resultLbl.setText("Result ");

        converterBtn.setText("Converter");
        converterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterBtnActionPerformed(evt);
            }
        });

        temp2CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Farenheit", "Kelvin", "Rankine", "Reaumur" }));
        temp2CB.setSelectedIndex(1);

        temp1CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Farenheit", "Kelvin", "Rankine", "Reaumur" }));

        celsiusLbl.setText("to");

        aboutMenu.setText("About");

        projectMenu.setText("Project");
        projectMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectMenuActionPerformed(evt);
            }
        });
        aboutMenu.add(projectMenu);

        temperatureMenu.setText("Scales");

        celsiusMenu.setText("Celsius");
        celsiusMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celsiusMenuActionPerformed(evt);
            }
        });
        temperatureMenu.add(celsiusMenu);

        farenheitMenu.setText("Fareinheit");
        farenheitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                farenheitMenuActionPerformed(evt);
            }
        });
        temperatureMenu.add(farenheitMenu);

        kelvinMenu.setText("Kelvin");
        kelvinMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kelvinMenuActionPerformed(evt);
            }
        });
        temperatureMenu.add(kelvinMenu);

        rankineMenu.setText("Rankine");
        temperatureMenu.add(rankineMenu);

        reaumurMenu.setText("Reaumur");
        temperatureMenu.add(reaumurMenu);

        aboutMenu.add(temperatureMenu);

        jMenuBar1.add(aboutMenu);

        configMenu.setText("Config");

        themeMenu.setText("Theme");

        darkMenu.setText("Dark");
        themeMenu.add(darkMenu);

        lightMenu.setText("Light");
        themeMenu.add(lightMenu);

        configMenu.add(themeMenu);

        languageMenu.setText("Language");

        englishMenu.setText("English");
        languageMenu.add(englishMenu);

        portugueseMenu.setText("Portuguese");
        languageMenu.add(portugueseMenu);

        spanishMenu.setText("Spanish");
        languageMenu.add(spanishMenu);

        configMenu.add(languageMenu);

        jMenuBar1.add(configMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultLbl)
                    .addComponent(converterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(temp1CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(celsiusLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(temp2CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(equationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(temp2CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(temp1CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(celsiusLbl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(converterBtn)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tempTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempTxtActionPerformed
        try {
            String temp = controller.ConverterController.convert(
                tempTxt.getText(),
                temp1CB.getSelectedItem().toString(),
                temp2CB.getSelectedItem().toString()
        );
            setResult(temp);
            setEquation(temp);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter a valid value", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tempTxtActionPerformed

    private void tempTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tempTxtFocusGained
        if (tempTxt.getText().equals("Enter a temperature")) {
            tempTxt.setText("");
            tempTxt.setFont(new java.awt.Font("Segoe UI", 0, 12));
            tempTxt.setForeground(java.awt.Color.BLACK);
        }

    }//GEN-LAST:event_tempTxtFocusGained

    private void tempTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tempTxtFocusLost
        if (tempTxt.getText().isEmpty()) {
            tempTxt.setFont(new java.awt.Font("Segoe UI", 2, 12));
            tempTxt.setForeground(java.awt.Color.gray);
            tempTxt.setText("Enter a temperature");
        }
    }//GEN-LAST:event_tempTxtFocusLost

    private void converterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterBtnActionPerformed
        try {
            String temp = controller.ConverterController.convert(
                tempTxt.getText(),
                temp1CB.getSelectedItem().toString(),
                temp2CB.getSelectedItem().toString()
        );
            setResult(temp);
            setEquation(temp);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Enter a valid value", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_converterBtnActionPerformed

    private void projectMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectMenuActionPerformed

    private void celsiusMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celsiusMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_celsiusMenuActionPerformed

    private void kelvinMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kelvinMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kelvinMenuActionPerformed

    private void farenheitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_farenheitMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_farenheitMenuActionPerformed

    public void setResult(String temp) {
        if (temp2CB.getSelectedItem().toString().equals("Celsius")) {
            resultLbl.setText("Result " + temp + " °C");
        } else if (temp2CB.getSelectedItem().toString().equals("Farenheit")) {
            resultLbl.setText("Result " + temp + " °F");
        } else if (temp2CB.getSelectedItem().toString().equals("Kelvin")) {
            resultLbl.setText("Result " + temp + " K");
        } else if (temp2CB.getSelectedItem().toString().equals("Rankine")) {
            resultLbl.setText("Result " + temp + " °R");
        } else if (temp2CB.getSelectedItem().toString().equals("Reaumur")) {
            resultLbl.setText("Result " + temp + " °Re");
        } else {
            resultLbl.setText("Result");
        }
    }

    public void setEquation(String temp) {
        String formula = controller.ConverterController.getFormula(
                tempTxt.getText(),
                temp,
                temp1CB.getSelectedItem().toString(),
                temp2CB.getSelectedItem().toString()
        );
        equationLbl.setText(formula);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConverterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JLabel celsiusLbl;
    private javax.swing.JMenuItem celsiusMenu;
    private javax.swing.JMenu configMenu;
    private javax.swing.JButton converterBtn;
    private javax.swing.JMenuItem darkMenu;
    private javax.swing.JMenuItem englishMenu;
    private javax.swing.JLabel equationLbl;
    private javax.swing.JMenuItem farenheitMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem kelvinMenu;
    private javax.swing.JMenu languageMenu;
    private javax.swing.JMenuItem lightMenu;
    private javax.swing.JMenuItem portugueseMenu;
    private javax.swing.JMenuItem projectMenu;
    private javax.swing.JMenuItem rankineMenu;
    private javax.swing.JMenuItem reaumurMenu;
    private javax.swing.JLabel resultLbl;
    private javax.swing.JMenuItem spanishMenu;
    private javax.swing.JComboBox<String> temp1CB;
    private javax.swing.JComboBox<String> temp2CB;
    private javax.swing.JTextField tempTxt;
    private javax.swing.JMenu temperatureMenu;
    private javax.swing.JMenu themeMenu;
    // End of variables declaration//GEN-END:variables
}
